<class name = "xdp_sock" state = "stable">
    The xdp_sock class!

    <constant name = "XSKS_MAP_DEFAULT" type="string" value = "xsks_map">The xsks map name</constant>
    <constant name = "SO_PREFER_BUSY_POLL" type="integer" value = "69">Prefer busy poll</constant>
    <constant name = "SO_BUSY_POLL" type="integer" value = "36">Busy poll</constant>
    <constant name = "SO_BUSY_POLL_BUDGET" type="integer" value = "70">Busy poll budget</constant>

    <constructor>
        Create a new xdp socket
        <argument name = "xdp_interface" type = "xdp_iface" />
    </constructor>

    <destructor>
    </destructor>

    <method name = "lookup_bpf_map">
        Create a new xdp socket
        <argument name = "xdp_interface" type = "xdp_iface" />
        <argument name = "map_name"  type = "string" />
        <argument name = "key_size" type = "number" size = "4" />
        <argument name = "value_size" type = "number" size = "4" />
        <return type="integer"/>
    </method>

    <method name = "set_sockopt">
        Set socket option
        <argument name = "opt_type" type = "integer" />
        <argument name = "opt_value" type = "integer" />
        <return type="integer"/>
    </method>

    <method name = "get_fd">
        Get socket file descriptor
        <return type="integer"/>
    </method>

    <method name = "rx_batch_get_size">
        Get batch
        <argument name = "frames_recvd" type = "number" size = "4" by_reference = "1" />
        <argument name = "nb" type = "number" size = "4" />
        <return type="integer"/>
    </method>

    <method name = "rx_batch_release">
        Release batch
        <argument name = "frames_recvd" type = "number" size = "4" />
        <return type="integer"/>
    </method>

    <method name = "recv">
        Receive a packet from the batch
        <argument name = "buffer" type = "buffer" mutable = "1"  c_type = "char *"/>
        <argument name = "buffer_size" type = "size" by_reference = "1" />
        <return type="integer"/>
    </method>

    <method name = "tx_batch_set_size">
        Set batch size
        <argument name = "nb" type = "number" size = "4" />
        <return type="integer"/>
    </method>

    <method name = "tx_batch_release">
        Release batch
        <argument name = "frames_send" type = "number" size = "4" />
        <return type="integer"/>
    </method>

    <method name = "send">
        Place a frame in the tx ring
        <argument name = "buffer" type = "buffer" mutable = "1"  c_type = "char *"/>
        <argument name = "buffer_size" type = "size" />
        <return type="integer"/>
    </method>

</class>
